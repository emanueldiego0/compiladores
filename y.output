Terminals unused in grammar

   REAL
   INTEGER
   EXPR
   ATTR
   STMT
   STMTS
   BLOCO
   EXPR_LOG
   COND
   REPT
   OR
   DIVI
   MOD
   AND
   NOT
   UMINUS


Grammar

    0 $accept: code $end

    1 code: init bloco
    2     | %empty

    3 init: PROGRAM ID ';'

    4 var_area: VAR decls
    5         | %empty

    6 @1: %empty

    7 $@2: %empty

    8 bloco: var_area @1 BEGIN_ $@2 stmts END

    9 decls: decls decl
   10      | %empty

   11 decl: ID ':' TYPE ';'

   12 stmts: stmts stmt
   13      | %empty

   14 stmt: expr ';'
   15     | bloco
   16     | attr
   17     | cond
   18     | rept
   19     | write
   20     | read

   21 write: WRITELN '(' expr ')' ';'

   22 read: READ '(' ID ')' ';'

   23 cond: IF '(' expr_log ')' THEN stmt
   24     | IF '(' expr_log ')' THEN stmt ELSE stmt

   25 rept: WHILE '(' expr_log ')' DO stmt

   26 expr_log: expr LT expr
   27         | expr LE expr
   28         | expr EQ expr
   29         | expr NE expr
   30         | expr GT expr
   31         | expr GE expr

   32 attr: ID ATT expr ';'

   33 expr: NUMBER
   34     | ID
   35     | expr ADD expr
   36     | expr SUB expr
   37     | expr MULT expr
   38     | expr DIVR expr
   39     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 21 22 23 24 25 39
')' (41) 21 22 23 24 25 39
':' (58) 11
';' (59) 3 11 14 21 22 32
error (256)
TYPE (258) 11
REAL (259)
INTEGER (260)
ID (261) 3 11 22 32 34
BEGIN_ (262) 8
END (263) 8
WHILE (264) 25
DO (265) 25
IF (266) 23 24
ELSE (267) 24
THEN (268) 23 24
EXPR (269)
ATTR (270)
VAR (271) 4
STMT (272)
STMTS (273)
BLOCO (274)
PROGRAM (275) 3
EXPR_LOG (276)
COND (277)
REPT (278)
ATT (279) 32
WRITELN (280) 21
READ (281) 22
ADD (282) 35
SUB (283) 36
OR (284)
MULT (285) 37
DIVR (286) 38
DIVI (287)
MOD (288)
AND (289)
EQ (290) 28
NE (291) 29
GE (292) 31
LE (293) 27
GT (294) 30
LT (295) 26
NOT (296)
NUMBER (297) 33
_ELSE (298)
UMINUS (299)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
code (50)
    on left: 1 2, on right: 0
init (51)
    on left: 3, on right: 1
var_area (52)
    on left: 4 5, on right: 8
bloco (53)
    on left: 8, on right: 1 15
@1 (54)
    on left: 6, on right: 8
$@2 (55)
    on left: 7, on right: 8
decls (56)
    on left: 9 10, on right: 4 9
decl (57)
    on left: 11, on right: 9
stmts (58)
    on left: 12 13, on right: 8 12
stmt (59)
    on left: 14 15 16 17 18 19 20, on right: 12 23 24 25
write (60)
    on left: 21, on right: 19
read (61)
    on left: 22, on right: 20
cond (62)
    on left: 23 24, on right: 17
rept (63)
    on left: 25, on right: 18
expr_log (64)
    on left: 26 27 28 29 30 31, on right: 23 24 25
attr (65)
    on left: 32, on right: 16
expr (66)
    on left: 33 34 35 36 37 38 39, on right: 14 21 26 27 28 29 30 31
    32 35 36 37 38 39


State 0

    0 $accept: . code $end

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 2 (code)

    code  go to state 2
    init  go to state 3


State 1

    3 init: PROGRAM . ID ';'

    ID  shift, and go to state 4


State 2

    0 $accept: code . $end

    $end  shift, and go to state 5


State 3

    1 code: init . bloco

    VAR  shift, and go to state 6

    $default  reduce using rule 5 (var_area)

    var_area  go to state 7
    bloco     go to state 8


State 4

    3 init: PROGRAM ID . ';'

    ';'  shift, and go to state 9


State 5

    0 $accept: code $end .

    $default  accept


State 6

    4 var_area: VAR . decls

    $default  reduce using rule 10 (decls)

    decls  go to state 10


State 7

    8 bloco: var_area . @1 BEGIN_ $@2 stmts END

    $default  reduce using rule 6 (@1)

    @1  go to state 11


State 8

    1 code: init bloco .

    $default  reduce using rule 1 (code)


State 9

    3 init: PROGRAM ID ';' .

    $default  reduce using rule 3 (init)


State 10

    4 var_area: VAR decls .
    9 decls: decls . decl

    ID  shift, and go to state 12

    $default  reduce using rule 4 (var_area)

    decl  go to state 13


State 11

    8 bloco: var_area @1 . BEGIN_ $@2 stmts END

    BEGIN_  shift, and go to state 14


State 12

   11 decl: ID . ':' TYPE ';'

    ':'  shift, and go to state 15


State 13

    9 decls: decls decl .

    $default  reduce using rule 9 (decls)


State 14

    8 bloco: var_area @1 BEGIN_ . $@2 stmts END

    $default  reduce using rule 7 ($@2)

    $@2  go to state 16


State 15

   11 decl: ID ':' . TYPE ';'

    TYPE  shift, and go to state 17


State 16

    8 bloco: var_area @1 BEGIN_ $@2 . stmts END

    $default  reduce using rule 13 (stmts)

    stmts  go to state 18


State 17

   11 decl: ID ':' TYPE . ';'

    ';'  shift, and go to state 19


State 18

    8 bloco: var_area @1 BEGIN_ $@2 stmts . END
   12 stmts: stmts . stmt

    ID       shift, and go to state 20
    END      shift, and go to state 21
    WHILE    shift, and go to state 22
    IF       shift, and go to state 23
    VAR      shift, and go to state 6
    WRITELN  shift, and go to state 24
    READ     shift, and go to state 25
    NUMBER   shift, and go to state 26
    '('      shift, and go to state 27

    $default  reduce using rule 5 (var_area)

    var_area  go to state 7
    bloco     go to state 28
    stmt      go to state 29
    write     go to state 30
    read      go to state 31
    cond      go to state 32
    rept      go to state 33
    attr      go to state 34
    expr      go to state 35


State 19

   11 decl: ID ':' TYPE ';' .

    $default  reduce using rule 11 (decl)


State 20

   32 attr: ID . ATT expr ';'
   34 expr: ID .

    ATT  shift, and go to state 36

    $default  reduce using rule 34 (expr)


State 21

    8 bloco: var_area @1 BEGIN_ $@2 stmts END .

    $default  reduce using rule 8 (bloco)


State 22

   25 rept: WHILE . '(' expr_log ')' DO stmt

    '('  shift, and go to state 37


State 23

   23 cond: IF . '(' expr_log ')' THEN stmt
   24     | IF . '(' expr_log ')' THEN stmt ELSE stmt

    '('  shift, and go to state 38


State 24

   21 write: WRITELN . '(' expr ')' ';'

    '('  shift, and go to state 39


State 25

   22 read: READ . '(' ID ')' ';'

    '('  shift, and go to state 40


State 26

   33 expr: NUMBER .

    $default  reduce using rule 33 (expr)


State 27

   39 expr: '(' . expr ')'

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 26
    '('     shift, and go to state 27

    expr  go to state 42


State 28

   15 stmt: bloco .

    $default  reduce using rule 15 (stmt)


State 29

   12 stmts: stmts stmt .

    $default  reduce using rule 12 (stmts)


State 30

   19 stmt: write .

    $default  reduce using rule 19 (stmt)


State 31

   20 stmt: read .

    $default  reduce using rule 20 (stmt)


State 32

   17 stmt: cond .

    $default  reduce using rule 17 (stmt)


State 33

   18 stmt: rept .

    $default  reduce using rule 18 (stmt)


State 34

   16 stmt: attr .

    $default  reduce using rule 16 (stmt)


State 35

   14 stmt: expr . ';'
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MULT expr
   38     | expr . DIVR expr

    ADD   shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIVR  shift, and go to state 46
    ';'   shift, and go to state 47


State 36

   32 attr: ID ATT . expr ';'

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 26
    '('     shift, and go to state 27

    expr  go to state 48


State 37

   25 rept: WHILE '(' . expr_log ')' DO stmt

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 26
    '('     shift, and go to state 27

    expr_log  go to state 49
    expr      go to state 50


State 38

   23 cond: IF '(' . expr_log ')' THEN stmt
   24     | IF '(' . expr_log ')' THEN stmt ELSE stmt

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 26
    '('     shift, and go to state 27

    expr_log  go to state 51
    expr      go to state 50


State 39

   21 write: WRITELN '(' . expr ')' ';'

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 26
    '('     shift, and go to state 27

    expr  go to state 52


State 40

   22 read: READ '(' . ID ')' ';'

    ID  shift, and go to state 53


State 41

   34 expr: ID .

    $default  reduce using rule 34 (expr)


State 42

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MULT expr
   38     | expr . DIVR expr
   39     | '(' expr . ')'

    ADD   shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIVR  shift, and go to state 46
    ')'   shift, and go to state 54


State 43

   35 expr: expr ADD . expr

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 26
    '('     shift, and go to state 27

    expr  go to state 55


State 44

   36 expr: expr SUB . expr

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 26
    '('     shift, and go to state 27

    expr  go to state 56


State 45

   37 expr: expr MULT . expr

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 26
    '('     shift, and go to state 27

    expr  go to state 57


State 46

   38 expr: expr DIVR . expr

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 26
    '('     shift, and go to state 27

    expr  go to state 58


State 47

   14 stmt: expr ';' .

    $default  reduce using rule 14 (stmt)


State 48

   32 attr: ID ATT expr . ';'
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MULT expr
   38     | expr . DIVR expr

    ADD   shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIVR  shift, and go to state 46
    ';'   shift, and go to state 59


State 49

   25 rept: WHILE '(' expr_log . ')' DO stmt

    ')'  shift, and go to state 60


State 50

   26 expr_log: expr . LT expr
   27         | expr . LE expr
   28         | expr . EQ expr
   29         | expr . NE expr
   30         | expr . GT expr
   31         | expr . GE expr
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MULT expr
   38     | expr . DIVR expr

    ADD   shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIVR  shift, and go to state 46
    EQ    shift, and go to state 61
    NE    shift, and go to state 62
    GE    shift, and go to state 63
    LE    shift, and go to state 64
    GT    shift, and go to state 65
    LT    shift, and go to state 66


State 51

   23 cond: IF '(' expr_log . ')' THEN stmt
   24     | IF '(' expr_log . ')' THEN stmt ELSE stmt

    ')'  shift, and go to state 67


State 52

   21 write: WRITELN '(' expr . ')' ';'
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MULT expr
   38     | expr . DIVR expr

    ADD   shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIVR  shift, and go to state 46
    ')'   shift, and go to state 68


State 53

   22 read: READ '(' ID . ')' ';'

    ')'  shift, and go to state 69


State 54

   39 expr: '(' expr ')' .

    $default  reduce using rule 39 (expr)


State 55

   35 expr: expr . ADD expr
   35     | expr ADD expr .
   36     | expr . SUB expr
   37     | expr . MULT expr
   38     | expr . DIVR expr

    MULT  shift, and go to state 45
    DIVR  shift, and go to state 46

    $default  reduce using rule 35 (expr)


State 56

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   36     | expr SUB expr .
   37     | expr . MULT expr
   38     | expr . DIVR expr

    MULT  shift, and go to state 45
    DIVR  shift, and go to state 46

    $default  reduce using rule 36 (expr)


State 57

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MULT expr
   37     | expr MULT expr .
   38     | expr . DIVR expr

    $default  reduce using rule 37 (expr)


State 58

   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MULT expr
   38     | expr . DIVR expr
   38     | expr DIVR expr .

    $default  reduce using rule 38 (expr)


State 59

   32 attr: ID ATT expr ';' .

    $default  reduce using rule 32 (attr)


State 60

   25 rept: WHILE '(' expr_log ')' . DO stmt

    DO  shift, and go to state 70


State 61

   28 expr_log: expr EQ . expr

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 26
    '('     shift, and go to state 27

    expr  go to state 71


State 62

   29 expr_log: expr NE . expr

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 26
    '('     shift, and go to state 27

    expr  go to state 72


State 63

   31 expr_log: expr GE . expr

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 26
    '('     shift, and go to state 27

    expr  go to state 73


State 64

   27 expr_log: expr LE . expr

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 26
    '('     shift, and go to state 27

    expr  go to state 74


State 65

   30 expr_log: expr GT . expr

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 26
    '('     shift, and go to state 27

    expr  go to state 75


State 66

   26 expr_log: expr LT . expr

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 26
    '('     shift, and go to state 27

    expr  go to state 76


State 67

   23 cond: IF '(' expr_log ')' . THEN stmt
   24     | IF '(' expr_log ')' . THEN stmt ELSE stmt

    THEN  shift, and go to state 77


State 68

   21 write: WRITELN '(' expr ')' . ';'

    ';'  shift, and go to state 78


State 69

   22 read: READ '(' ID ')' . ';'

    ';'  shift, and go to state 79


State 70

   25 rept: WHILE '(' expr_log ')' DO . stmt

    ID       shift, and go to state 20
    WHILE    shift, and go to state 22
    IF       shift, and go to state 23
    VAR      shift, and go to state 6
    WRITELN  shift, and go to state 24
    READ     shift, and go to state 25
    NUMBER   shift, and go to state 26
    '('      shift, and go to state 27

    $default  reduce using rule 5 (var_area)

    var_area  go to state 7
    bloco     go to state 28
    stmt      go to state 80
    write     go to state 30
    read      go to state 31
    cond      go to state 32
    rept      go to state 33
    attr      go to state 34
    expr      go to state 35


State 71

   28 expr_log: expr EQ expr .
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MULT expr
   38     | expr . DIVR expr

    ADD   shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIVR  shift, and go to state 46

    $default  reduce using rule 28 (expr_log)


State 72

   29 expr_log: expr NE expr .
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MULT expr
   38     | expr . DIVR expr

    ADD   shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIVR  shift, and go to state 46

    $default  reduce using rule 29 (expr_log)


State 73

   31 expr_log: expr GE expr .
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MULT expr
   38     | expr . DIVR expr

    ADD   shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIVR  shift, and go to state 46

    $default  reduce using rule 31 (expr_log)


State 74

   27 expr_log: expr LE expr .
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MULT expr
   38     | expr . DIVR expr

    ADD   shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIVR  shift, and go to state 46

    $default  reduce using rule 27 (expr_log)


State 75

   30 expr_log: expr GT expr .
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MULT expr
   38     | expr . DIVR expr

    ADD   shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIVR  shift, and go to state 46

    $default  reduce using rule 30 (expr_log)


State 76

   26 expr_log: expr LT expr .
   35 expr: expr . ADD expr
   36     | expr . SUB expr
   37     | expr . MULT expr
   38     | expr . DIVR expr

    ADD   shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIVR  shift, and go to state 46

    $default  reduce using rule 26 (expr_log)


State 77

   23 cond: IF '(' expr_log ')' THEN . stmt
   24     | IF '(' expr_log ')' THEN . stmt ELSE stmt

    ID       shift, and go to state 20
    WHILE    shift, and go to state 22
    IF       shift, and go to state 23
    VAR      shift, and go to state 6
    WRITELN  shift, and go to state 24
    READ     shift, and go to state 25
    NUMBER   shift, and go to state 26
    '('      shift, and go to state 27

    $default  reduce using rule 5 (var_area)

    var_area  go to state 7
    bloco     go to state 28
    stmt      go to state 81
    write     go to state 30
    read      go to state 31
    cond      go to state 32
    rept      go to state 33
    attr      go to state 34
    expr      go to state 35


State 78

   21 write: WRITELN '(' expr ')' ';' .

    $default  reduce using rule 21 (write)


State 79

   22 read: READ '(' ID ')' ';' .

    $default  reduce using rule 22 (read)


State 80

   25 rept: WHILE '(' expr_log ')' DO stmt .

    $default  reduce using rule 25 (rept)


State 81

   23 cond: IF '(' expr_log ')' THEN stmt .
   24     | IF '(' expr_log ')' THEN stmt . ELSE stmt

    ELSE  shift, and go to state 82

    $default  reduce using rule 23 (cond)


State 82

   24 cond: IF '(' expr_log ')' THEN stmt ELSE . stmt

    ID       shift, and go to state 20
    WHILE    shift, and go to state 22
    IF       shift, and go to state 23
    VAR      shift, and go to state 6
    WRITELN  shift, and go to state 24
    READ     shift, and go to state 25
    NUMBER   shift, and go to state 26
    '('      shift, and go to state 27

    $default  reduce using rule 5 (var_area)

    var_area  go to state 7
    bloco     go to state 28
    stmt      go to state 83
    write     go to state 30
    read      go to state 31
    cond      go to state 32
    rept      go to state 33
    attr      go to state 34
    expr      go to state 35


State 83

   24 cond: IF '(' expr_log ')' THEN stmt ELSE stmt .

    $default  reduce using rule 24 (cond)
